# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release
    - name: Upload a Build Artifact
      id: artifacto
      uses: actions/upload-artifact@v4.6.1
      with:
        # Artifact name
        name: artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: bin/
        # The desired behavior if no files are found using the provided path.
    - name: Read VERSION file
      id: getversion
      run: echo "::set-output name=version::$(cat VERSION.txt)"
    - name: Read VERSION file
      id: getCL
      run: echo "::set-output name=cl::$(cat CHANGELOG.md)"
    - name: Create a Release in a GitHub Action
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # You may pin to the exact commit or the version.
      # uses: comnoco/create-release-action@7dea6dc82ac9d97ced7a764aa82811451bba80e0
      uses: comnoco/create-release-action@v2.0.5
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{ steps.getversion.outputs.version }}
        # The name of the release. For example, `Release v1.0.1`
        release_name: v${{ steps.getversion.outputs.version }}-alpha
        # Text describing the contents of the tag.
        body: ${{ steps.getCL.outputs.cl }}
        # `true` to identify the release as a prerelease. `false` to identify the release as a full release. Default: `false`
        prerelease: true
    - name: Upload to Release Action
      # You may pin to the exact commit or the version.
      # uses: Shopify/upload-to-release@c77c9b3e5d288adaef98a7007bf92340ec6ce03b
      uses: Shopify/upload-to-release@v2.0.0
      with:
        # Artifact name
        name: ${{ steps.getversion.outputs.version }}.zip
        # Path to the file to upload
        path: ${{ steps.artifacto.outputs.artifact-url }}
        # secrets.GITHUB_TOKEN
        repo-token: ${{ secrets.GITHUB_TOKEN }}
              
